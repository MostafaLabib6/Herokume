// <auto-generated />
using System;
using Herokume.Persisitance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Herokume.Persisitance.Migrations
{
    [DbContext(typeof(HerokumeDbContext))]
    [Migration("20231125220322_addIsSeries")]
    partial class addIsSeries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategorySeries", b =>
                {
                    b.Property<Guid>("SeriesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("categoriesID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SeriesID", "categoriesID");

                    b.HasIndex("categoriesID");

                    b.ToTable("CategorySeries");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EpisodeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSeries")
                        .HasColumnType("bit");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ResponseToID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SeriesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("EpisodeID");

                    b.HasIndex("ResponseToID");

                    b.HasIndex("SeriesID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Episode", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EpisodeURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid>("SeriesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("SeriesId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.RelatedSeries", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<Guid?>("SeriesID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("SeriesID");

                    b.ToTable("RelatedSeries");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Series", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AddToWatchList")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.Property<bool>("ShowInSlides")
                        .HasColumnType("bit");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("SeriesTag", b =>
                {
                    b.Property<Guid>("SeriesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SeriesID", "TagsID");

                    b.HasIndex("TagsID");

                    b.ToTable("SeriesTag");
                });

            modelBuilder.Entity("CategorySeries", b =>
                {
                    b.HasOne("Herokume.Domain.Entities.Series", null)
                        .WithMany()
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herokume.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("categoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Herokume.Domain.Entities.Episode", "Episode")
                        .WithMany("Comments")
                        .HasForeignKey("EpisodeID");

                    b.HasOne("Herokume.Domain.Entities.Comment", "ResponseTo")
                        .WithMany("Responses")
                        .HasForeignKey("ResponseToID");

                    b.HasOne("Herokume.Domain.Entities.Series", "Series")
                        .WithMany("Comments")
                        .HasForeignKey("SeriesID");

                    b.Navigation("Episode");

                    b.Navigation("ResponseTo");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Episode", b =>
                {
                    b.HasOne("Herokume.Domain.Entities.Series", "Series")
                        .WithMany("Episodes")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.RelatedSeries", b =>
                {
                    b.HasOne("Herokume.Domain.Entities.Series", null)
                        .WithMany("RelatedTo")
                        .HasForeignKey("SeriesID");
                });

            modelBuilder.Entity("SeriesTag", b =>
                {
                    b.HasOne("Herokume.Domain.Entities.Series", null)
                        .WithMany()
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herokume.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Episode", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Herokume.Domain.Entities.Series", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Episodes");

                    b.Navigation("RelatedTo");
                });
#pragma warning restore 612, 618
        }
    }
}
